pipeline {
	agent {
		label 'scs'
	}

	environment {
		GITHUB_KNOWN_HOSTS = credentials('GITHUB_KNOWN_HOSTS')
		SSH_PRIV_KEY = credentials('bf4bf1da-3b6d-4059-ab95-a4b80d255c9b')

		GIT_SSH_COMMAND='ssh -i ${SSH_PRIV_KEY} -o UserKnownHostsFile=${WORKSPACE}/.ssh/known_hosts'
	}

	options {
		disableConcurrentBuilds()
	}

	parameters {
		booleanParam(
			defaultValue: false,
			description: '',
			name: 'DEBUG_MODE'
		)

		string(
			defaultValue: 'liferay',
			description: 'The Github project you want to use',
			name: 'GITHUB_PROJECT'
		)

		string(
			defaultValue: 'liferay-dxp-2023.q3.4-hotfix-95.zip,liferay-dxp-2023.q4.2-hotfix-224.zip,liferay-dxp-2024.q1.2-hotfix-180.zip,liferay-dxp-2024.q1.7-hotfix-46.zip,liferay-dxp-2024.q1.7-hotfix-55.zip,liferay-dxp-2024.q1.8-hotfix-15.zip,liferay-dxp-2024.q2.1-hotfix-6.zip,liferay-dxp-2024.q2.11-hotfix-2.zip,liferay-dxp-2024.q3.0-hotfix-14.zip,liferay-dxp-2024.q3.0-hotfix-15.zip,liferay-dxp-2024.q3.0-hotfix-17.zip,liferay-dxp-2024.q3.4-hotfix-4.zip,liferay-dxp-2024.q3.4-hotfix-6.zipliferay-hotfix-1629-7413.zip,liferay-hotfix-2115-7413.zip,liferay-hotfix-2116-7413.zip,liferay-hotfix-239-7310.zip,liferay-hotfix-5146-7413.zip,liferay-hotfix-5998-7413.zip,liferay-hotfix-9605-7310.zip,liferay-hotfix-9891-7310.zip,',
			description: 'Comma-separated list of zip files that are not processed.',
			name: 'IGNORE_ZIP_FILES'
		)

		booleanParam(
			defaultValue: false,
			description: '',
			name: 'NO_PUSH'
		)

		booleanParam(
			defaultValue: false,
			description: '',
			name: 'REMOVE_DXP_REPO'
		)

		booleanParam(
			defaultValue: false,
			description: '',
			name: 'REMOVE_EE_REPO'
		)

		booleanParam(
			defaultValue: false,
			description: '',
			name: 'REMOVE_LOG_DIR'
		)

		booleanParam(
			defaultValue: true,
			description: '',
			name: 'RUN_SCRIPT_HOTFIXES'
		)

		booleanParam(
			defaultValue: true,
			description: 'Parameter',
			name: 'RUN_SCRIPT_VERSIONS'
		)

		string(
			defaultValue: null,
			description: 'The hotfix will be copied regardless of the .patch.requirements property.',
			name: 'TAG_FORCE_COPY'
		)

		string(
			defaultValue: '1 min',
			description: '',
			name: 'ZIP_LIST_RETENTION_TIME'
		)
	}

	stages {
		stage ('Prepare environment') {
			steps {
				sh '''
				echo "REMOVE_LOG_DIR is set to: ${REMOVE_LOG_DIR}."

				if [ "${REMOVE_LOG_DIR}" = "true" ]
				then
					rm -fr ./logs
				fi
				'''

				sh '''
				install -d .ssh -m 0700
				echo "${GITHUB_KNOWN_HOSTS}" > .ssh/known_hosts
				'''

				sh '''
				REPO_NAME_DXP="liferay-dxp"

				echo "REMOVE_DXP_REPO is set to: ${REMOVE_DXP_REPO}".
				echo "GITHUB_PROJECT is set to: ${GITHUB_PROJECT}".

				if [ "${REMOVE_DXP_REPO}" = "true" ]
				then
					rm -fr "${REPO_NAME_DXP}"
					git clone "git@github.com:${GITHUB_PROJECT}/${REPO_NAME_DXP}"
				fi
				'''

				sh '''
				REPO_NAME_EE="liferay-portal-ee"

				echo "REMOVE_EE_REPO is set to: ${REMOVE_EE_REPO}"

				if [ "${REMOVE_EE_REPO}" = "true" ]
				then
					rm -fr "${REPO_NAME_EE}"
				fi
				'''
			}
		}

		stage ('Run update_versions script') {
			steps {
				sh '''
				ARGUMENTS=""

				SCRIPT_PATH="./narwhal/source_code_sharing"

				echo "DEBUG_MODE set to: '${DEBUG_MODE}'"

				if [ "${DEBUG_MODE}" = "true" ]
				then
					ARGUMENTS="${ARGUMENTS} --debug"
				fi

				echo "NO_PUSH set to: '${NO_PUSH}'"

				if [ "${NO_PUSH}" = "true" ]
				then
					ARGUMENTS="${ARGUMENTS} --no-push"
				fi

				echo "RUN_SCRIPT_VERSIONS set to: '${RUN_SCRIPT_VERSIONS}'"

				if [ "${RUN_SCRIPT_VERSIONS}" = "true" ]
				then
					"${SCRIPT_PATH}/update_liferay_dxp_source_code_of_versions.sh" \
						--logdir "${PWD}/logs/${BUILD_NUMBER}" \
						${ARGUMENTS}
				fi
				'''
			}
		}

		stage ('Run update_hotfixes script') {
			steps {
				sh '''
				ARGUMENTS=""

				SCRIPT_PATH="./narwhal/source_code_sharing"

				echo "DEBUG_MODE set to: '${DEBUG_MODE}'"

				if [ "${DEBUG_MODE}" = "true" ]
				then
					ARGUMENTS="${ARGUMENTS} --debug"
				fi

				echo "NO_PUSH set to: '${NO_PUSH}'"

				if [ "${NO_PUSH}" = "true" ]
				then
					ARGUMENTS="${ARGUMENTS} --no-push"
				fi

				echo "RUN_SCRIPT_HOTFIXES set to: '${RUN_SCRIPT_HOTFIXES}'"

				if [ "${RUN_SCRIPT_HOTFIXES}" = "true" ]
				then
					"${SCRIPT_PATH}/update_liferay_dxp_source_code_of_hotfixes.sh" \
						--ignore-zip-files "${IGNORE_ZIP_FILES}" \
						--logdir "${PWD}/logs/${BUILD_NUMBER}" \
						--zip-list-retention-time "${ZIP_LIST_RETENTION_TIME}" \
						${ARGUMENTS}
				fi
				'''
			}
		}
	}

	post {
		always {
			sh '''
			rm -f logs/latest
			ln -r -s "logs/${BUILD_NUMBER}" logs/latest
			'''

			archiveArtifacts artifacts: 'logs/latest/*.txt'
		}
	}
}
